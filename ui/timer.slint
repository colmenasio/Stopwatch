import { Theme } from "theme.slint";
import { CustButton } from "custom_buttons.slint";
export { FullTimer, TLogic }

global TLogic {
    callback update_time();
    callback press_l_button();
    callback press_r_button();

    in-out property <bool> is_running: false;
    in-out property <bool> is_paused: false;
    in property <string> time_str: "00:00:00";

}

component Display inherits Rectangle {
    background: Theme.palette.main-div;
    in property <string> text <=> t.text;
    border-color: Theme.palette.main-border;
    border-width: 2px;
    border-radius: 10px;
        t:= Text {
            font-size: 20px;
            font-family: Theme.palette.font-fam;
            color: Theme.palette.main-text;
         }
}


component FullTimer inherits Rectangle{
    background: Theme.palette.main-bg-grad;
    VerticalLayout {
        padding: 0;
        spacing: 10px;
        height: 100px;

        HorizontalLayout {
            alignment: center;
            display := Display {
                height: 50px;
                width: 250px;
                text: "--:--:--";
            }
        }

        HorizontalLayout {
            alignment: center;
            height: 30%;
            spacing: 10px;
            l_button := CustButton {
                width: 100px;
                text: "Start Timer"; 
                on-press => {TLogic.press-l-button()}
            }
            r-button := CustButton {
                width: 100px;
                text: "Reset Timer"; 
                on-press => {TLogic.press-r-button()}}
        }
    }
    states [
        inactive when !TLogic.is-running : {
            l_button.text: "Start Timer";
            r_button.text: "Reset Timer";
            r_button.enabled: false;
            display.text: "--:--:--";
        }
        running when TLogic.is-running && !TLogic.is-paused : {
            l_button.text: "Pause Timer";
            r_button.text: "Reset Timer";
            display.text: TLogic.time-str;
        }
        paused when TLogic.is-running && TLogic.is-paused : {
            l_button.text: "Resume Timer";
            r_button.text: "Reset Timer";
            display.text: TLogic.time-str;
        }

    ]
}